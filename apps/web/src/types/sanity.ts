// Query TypeMap
import "@sanity/client";

/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Body = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type FooterColumn = {
  _type: "footerColumn";
  title: string;
  links: Array<
    {
      _key: string;
    } & FooterColumnLink
  >;
};

export type FooterColumnLink = {
  _type: "footerColumnLink";
  name: string;
  linkType: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  externalLink?: string;
  openInNewTab?: boolean;
};

export type NavigationDropdown = {
  _type: "navigationDropdown";
  title: string;
  columns: Array<
    {
      _key: string;
    } & NavigationColumn
  >;
};

export type NavigationColumn = {
  _type: "navigationColumn";
  title?: string;
  links: Array<
    {
      _key: string;
    } & NavigationColumnLink
  >;
};

export type NavigationColumnLink = {
  _type: "navigationColumnLink";
  name: string;
  linkType: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  externalLink?: string;
  openInNewTab?: boolean;
};

export type NavigationLink = {
  _type: "navigationLink";
  name: string;
  linkType: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  externalLink?: string;
  openInNewTab?: boolean;
};

export type Bookmark = {
  _type: "bookmark";
  reference:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "market";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "person";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "language";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "settings";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "navigation";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "footer";
      };
  note?: string;
};

export type Accordion = {
  _type: "accordion";
  title?: string;
  panels: Array<{
    label: string;
    content: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
          listItem?: "number" | "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          caption?: string;
          _type: "image";
          _key: string;
        }
    >;
    defaultOpen?: boolean;
    _type: "panel";
    _key: string;
  }>;
  allowMultiple?: boolean;
  variant?: "default" | "bordered" | "minimal";
};

export type FilmStrip = {
  _type: "filmStrip";
  cards: Array<{
    label: string;
    buttons?: Array<
      {
        _key: string;
      } & Button
    >;
    mediaType?: "image" | "video";
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string;
      _type: "image";
    };
    video?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      media?: unknown;
      alt?: string;
      poster?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      _type: "file";
    };
    _type: "card";
    _key: string;
  }>;
};

export type Hero = {
  _type: "hero";
  slides: Array<{
    title: string;
    subTitle?: string;
    buttons?: Array<
      {
        _key: string;
      } & Button
    >;
    mediaType?: "image" | "video";
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string;
      _type: "image";
    };
    video?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      media?: unknown;
      poster: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      _type: "file";
    };
    contentAlignment?: "left" | "center" | "right";
    _type: "heroSlide";
    _key: string;
  }>;
  autoplay?: boolean;
  slideInterval?: number;
};

export type Button = {
  _type: "button";
  variant?:
    | "default"
    | "secondary"
    | "outline"
    | "link"
    | "ghost"
    | "destructive"
    | "fullGhost"
    | "CTA";
  text: string;
  linkType: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  externalLink?: string;
  openInNewTab?: boolean;
};

export type RichText = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
      listItem?: "number" | "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "image";
      _key: string;
    }
>;

export type PageBuilder = Array<
  | ({
      _key: string;
    } & Hero)
  | ({
      _key: string;
    } & FilmStrip)
  | ({
      _key: string;
    } & Accordion)
>;

export type Person = {
  _id: string;
  _type: "person";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  bookmarks?: Array<
    {
      _key: string;
    } & Bookmark
  >;
  userId: string;
  profileImage: string;
  languages?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "language";
  }>;
};

export type Market = {
  _id: string;
  _type: "market";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  code: string;
  languages: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "language";
  }>;
};

export type Language = {
  _id: string;
  _type: "language";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  code: string;
  isDefault?: boolean;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label: string;
  subtitle?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  columns: Array<
    {
      _key: string;
    } & FooterColumn
  >;
  copyrightText?: string;
  language?: string;
  market?: string;
};

export type Navigation = {
  _id: string;
  _type: "navigation";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label: string;
  navigationItems: Array<
    | ({
        _key: string;
      } & NavigationDropdown)
    | ({
        _key: string;
      } & NavigationLink)
  >;
  language?: string;
  market?: string;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label: string;
  siteTitle: string;
  siteDescription: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  favicon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  socialShareImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  language?: string;
  market?: string;
};

export type HomePage = {
  _id: string;
  _type: "homePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  pageBuilder?: PageBuilder;
  language?: string;
  market?: string;
};

export type SanityAssistInstructionTask = {
  _type: "sanity.assist.instructionTask";
  path?: string;
  instructionKey?: string;
  started?: string;
  updated?: string;
  info?: string;
};

export type SanityAssistTaskStatus = {
  _type: "sanity.assist.task.status";
  tasks?: Array<
    {
      _key: string;
    } & SanityAssistInstructionTask
  >;
};

export type SanityAssistSchemaTypeAnnotations = {
  _type: "sanity.assist.schemaType.annotations";
  title?: string;
  fields?: Array<
    {
      _key: string;
    } & SanityAssistSchemaTypeField
  >;
};

export type SanityAssistOutputType = {
  _type: "sanity.assist.output.type";
  type?: string;
};

export type SanityAssistOutputField = {
  _type: "sanity.assist.output.field";
  path?: string;
};

export type SanityAssistInstructionContext = {
  _type: "sanity.assist.instruction.context";
  reference: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "assist.instruction.context";
  };
};

export type AssistInstructionContext = {
  _id: string;
  _type: "assist.instruction.context";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  context?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: null;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityAssistInstructionUserInput = {
  _type: "sanity.assist.instruction.userInput";
  message: string;
  description?: string;
};

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<
    | {
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }
    | ({
        _key: string;
      } & SanityAssistInstructionFieldRef)
    | ({
        _key: string;
      } & SanityAssistInstructionContext)
    | ({
        _key: string;
      } & SanityAssistInstructionUserInput)
  >;
  style?: "normal";
  listItem?: never;
  markDefs?: null;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type SanityAssistInstructionFieldRef = {
  _type: "sanity.assist.instruction.fieldRef";
  path?: string;
};

export type SanityAssistInstruction = {
  _type: "sanity.assist.instruction";
  prompt?: SanityAssistInstructionPrompt;
  icon?: string;
  title?: string;
  userId?: string;
  createdById?: string;
  output?: Array<
    | ({
        _key: string;
      } & SanityAssistOutputField)
    | ({
        _key: string;
      } & SanityAssistOutputType)
  >;
};

export type SanityAssistSchemaTypeField = {
  _type: "sanity.assist.schemaType.field";
  path?: string;
  instructions?: Array<
    {
      _key: string;
    } & SanityAssistInstruction
  >;
};

export type InternationalizedArrayStringValue = {
  _type: "internationalizedArrayStringValue";
  value?: string;
};

export type InternationalizedArrayString = Array<
  {
    _key: string;
  } & InternationalizedArrayStringValue
>;

export type TranslationMetadata = {
  _id: string;
  _type: "translation.metadata";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array<
    {
      _key: string;
    } & InternationalizedArrayReferenceValue
  >;
  schemaTypes?: Array<string>;
};

export type InternationalizedArrayReferenceValue = {
  _type: "internationalizedArrayReferenceValue";
  value?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  pageBuilder?: PageBuilder;
  language?: string;
};

export type InternationalizedArrayReference = Array<
  {
    _key: string;
  } & InternationalizedArrayReferenceValue
>;

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | Body
  | FooterColumn
  | FooterColumnLink
  | NavigationDropdown
  | NavigationColumn
  | NavigationColumnLink
  | NavigationLink
  | Bookmark
  | Accordion
  | FilmStrip
  | Hero
  | Button
  | RichText
  | PageBuilder
  | Person
  | Market
  | Language
  | Footer
  | Navigation
  | Settings
  | HomePage
  | SanityAssistInstructionTask
  | SanityAssistTaskStatus
  | SanityAssistSchemaTypeAnnotations
  | SanityAssistOutputType
  | SanityAssistOutputField
  | SanityAssistInstructionContext
  | AssistInstructionContext
  | SanityAssistInstructionUserInput
  | SanityAssistInstructionPrompt
  | SanityAssistInstructionFieldRef
  | SanityAssistInstruction
  | SanityAssistSchemaTypeField
  | InternationalizedArrayStringValue
  | InternationalizedArrayString
  | TranslationMetadata
  | InternationalizedArrayReferenceValue
  | Page
  | InternationalizedArrayReference
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ../../apps/web/src/lib/sanity/query.ts
// Variable: LANGUAGES_QUERY
// Query: *[  _type == "language"] | order(title asc) {  _id,  title,  code,  isDefault}
export type LANGUAGES_QUERYResult = Array<{
  _id: string;
  title: string;
  code: string;
  isDefault: boolean | null;
}>;
// Variable: MARKET_DEFAULT_LANGUAGE_QUERY
// Query: *[  _type == "market"   && code == $marketCode][0] {  _id,  title,  code,  "defaultLanguage": languages[@->isDefault == true][0]-> {    _id,    title,    code,    isDefault  }}
export type MARKET_DEFAULT_LANGUAGE_QUERYResult = {
  _id: string;
  title: string;
  code: string;
  defaultLanguage: {
    _id: string;
    title: string;
    code: string;
    isDefault: boolean | null;
  } | null;
} | null;
// Variable: buttonFragment
// Query: buttons[] {    text,    linkType,    openInNewTab,    variant,    internalLink-> {      _id,      _type,      _ref,      slug {        _type,        current      }    },    externalLink  }
export type ButtonFragmentResult = never;
// Variable: pageBuilderFragment
// Query: pageBuilder[] {      _type == "hero" => {    _type,    _key,    slides[] {      title,      subTitle,        buttons[] {    text,    linkType,    openInNewTab,    variant,    internalLink-> {      _id,      _type,      _ref,      slug {        _type,        current      }    },    externalLink  },      mediaType,      image {        ...,        ...asset-> {          altText,          caption,          ...metadata {            lqip,            ...dimensions {              width,              height            }          }        }      },      video {        asset,        alt,        poster {          asset        }      }    }  },      _type == "filmStrip" => {    _type,    _key,    cards[]{      _key,      label,        buttons[] {    text,    linkType,    openInNewTab,    variant,    internalLink-> {      _id,      _type,      _ref,      slug {        _type,        current      }    },    externalLink  },      mediaType,      image {        ...,        ...asset-> {          altText,          caption,          ...metadata {            lqip,            ...dimensions {              width,              height            }          }        }      },      video{        asset->{          _id,          url        },        alt,        poster{          asset->{            _id,            url          },          alt        }      },      ctaButtons[]{        _key,        label,        linkType,        internalLink->{_ref, slug},        externalLink      }    }  },      _type == "accordion" => {    _type,    _key,    panels[]{      _key,      label,      content    }  }  }
export type PageBuilderFragmentResult = never;
// Variable: homeQuery
// Query: *[_id == $docId][0] {    _id,    _type,    title,    description,    language,      pageBuilder[] {      _type == "hero" => {    _type,    _key,    slides[] {      title,      subTitle,        buttons[] {    text,    linkType,    openInNewTab,    variant,    internalLink-> {      _id,      _type,      _ref,      slug {        _type,        current      }    },    externalLink  },      mediaType,      image {        ...,        ...asset-> {          altText,          caption,          ...metadata {            lqip,            ...dimensions {              width,              height            }          }        }      },      video {        asset,        alt,        poster {          asset        }      }    }  },      _type == "filmStrip" => {    _type,    _key,    cards[]{      _key,      label,        buttons[] {    text,    linkType,    openInNewTab,    variant,    internalLink-> {      _id,      _type,      _ref,      slug {        _type,        current      }    },    externalLink  },      mediaType,      image {        ...,        ...asset-> {          altText,          caption,          ...metadata {            lqip,            ...dimensions {              width,              height            }          }        }      },      video{        asset->{          _id,          url        },        alt,        poster{          asset->{            _id,            url          },          alt        }      },      ctaButtons[]{        _key,        label,        linkType,        internalLink->{_ref, slug},        externalLink      }    }  },      _type == "accordion" => {    _type,    _key,    panels[]{      _key,      label,      content    }  }  },    seoTitle,    seoDescription,    seoImage {      asset->,      alt    },    ogTitle,    ogDescription  }
export type HomeQueryResult =
  | {
      _id: string;
      _type: "assist.instruction.context";
      title: string | null;
      description: null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "footer";
      title: null;
      description: null;
      language: string | null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "homePage";
      title: string;
      description: null;
      language: string | null;
      pageBuilder: Array<
        | {
            _type: "accordion";
            _key: string;
            panels: Array<{
              _key: string;
              label: string;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      href?: string;
                      _type: "link";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              >;
            }>;
          }
        | {
            _type: "filmStrip";
            _key: string;
            cards: Array<{
              _key: string;
              label: string;
              buttons: Array<{
                text: string;
                linkType: "external" | "internal";
                openInNewTab: boolean | null;
                variant:
                  | "CTA"
                  | "default"
                  | "destructive"
                  | "fullGhost"
                  | "ghost"
                  | "link"
                  | "outline"
                  | "secondary"
                  | null;
                internalLink: {
                  _id: string;
                  _type: "page";
                  _ref: null;
                  slug: {
                    _type: "slug";
                    current: string;
                  };
                } | null;
                externalLink: string | null;
              }> | null;
              mediaType: "image" | "video" | null;
              image:
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                    width: number | null;
                    height: number | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                  }
                | null;
              video: {
                asset: {
                  _id: string;
                  url: string | null;
                } | null;
                alt: string | null;
                poster: {
                  asset: {
                    _id: string;
                    url: string | null;
                  } | null;
                  alt: null;
                } | null;
              } | null;
              ctaButtons: null;
            }>;
          }
        | {
            _type: "hero";
            _key: string;
            slides: Array<{
              title: string;
              subTitle: string | null;
              buttons: Array<{
                text: string;
                linkType: "external" | "internal";
                openInNewTab: boolean | null;
                variant:
                  | "CTA"
                  | "default"
                  | "destructive"
                  | "fullGhost"
                  | "ghost"
                  | "link"
                  | "outline"
                  | "secondary"
                  | null;
                internalLink: {
                  _id: string;
                  _type: "page";
                  _ref: null;
                  slug: {
                    _type: "slug";
                    current: string;
                  };
                } | null;
                externalLink: string | null;
              }> | null;
              mediaType: "image" | "video" | null;
              image:
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                    width: number | null;
                    height: number | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                  }
                | null;
              video: {
                asset: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                } | null;
                alt: null;
                poster: {
                  asset: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  } | null;
                };
              } | null;
            }>;
          }
      > | null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "language";
      title: string;
      description: null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "market";
      title: string;
      description: null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "navigation";
      title: null;
      description: null;
      language: string | null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "page";
      title: string;
      description: null;
      language: string | null;
      pageBuilder: Array<
        | {
            _type: "accordion";
            _key: string;
            panels: Array<{
              _key: string;
              label: string;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      href?: string;
                      _type: "link";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              >;
            }>;
          }
        | {
            _type: "filmStrip";
            _key: string;
            cards: Array<{
              _key: string;
              label: string;
              buttons: Array<{
                text: string;
                linkType: "external" | "internal";
                openInNewTab: boolean | null;
                variant:
                  | "CTA"
                  | "default"
                  | "destructive"
                  | "fullGhost"
                  | "ghost"
                  | "link"
                  | "outline"
                  | "secondary"
                  | null;
                internalLink: {
                  _id: string;
                  _type: "page";
                  _ref: null;
                  slug: {
                    _type: "slug";
                    current: string;
                  };
                } | null;
                externalLink: string | null;
              }> | null;
              mediaType: "image" | "video" | null;
              image:
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                    width: number | null;
                    height: number | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                  }
                | null;
              video: {
                asset: {
                  _id: string;
                  url: string | null;
                } | null;
                alt: string | null;
                poster: {
                  asset: {
                    _id: string;
                    url: string | null;
                  } | null;
                  alt: null;
                } | null;
              } | null;
              ctaButtons: null;
            }>;
          }
        | {
            _type: "hero";
            _key: string;
            slides: Array<{
              title: string;
              subTitle: string | null;
              buttons: Array<{
                text: string;
                linkType: "external" | "internal";
                openInNewTab: boolean | null;
                variant:
                  | "CTA"
                  | "default"
                  | "destructive"
                  | "fullGhost"
                  | "ghost"
                  | "link"
                  | "outline"
                  | "secondary"
                  | null;
                internalLink: {
                  _id: string;
                  _type: "page";
                  _ref: null;
                  slug: {
                    _type: "slug";
                    current: string;
                  };
                } | null;
                externalLink: string | null;
              }> | null;
              mediaType: "image" | "video" | null;
              image:
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                    width: number | null;
                    height: number | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                    lqip: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                    altText: string | null;
                    caption: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt: string;
                    _type: "image";
                  }
                | null;
              video: {
                asset: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                } | null;
                alt: null;
                poster: {
                  asset: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  } | null;
                };
              } | null;
            }>;
          }
      > | null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "person";
      title: null;
      description: null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "sanity.fileAsset";
      title: string | null;
      description: string | null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "sanity.imageAsset";
      title: string | null;
      description: string | null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "settings";
      title: null;
      description: null;
      language: string | null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | {
      _id: string;
      _type: "translation.metadata";
      title: null;
      description: null;
      language: null;
      pageBuilder: null;
      seoTitle: null;
      seoDescription: null;
      seoImage: null;
      ogTitle: null;
      ogDescription: null;
    }
  | null;

declare module "@sanity/client" {
  interface SanityQueries {
    '*[\n  _type == "language"\n] | order(title asc) {\n  _id,\n  title,\n  code,\n  isDefault\n}': LANGUAGES_QUERYResult;
    '*[\n  _type == "market" \n  && code == $marketCode\n][0] {\n  _id,\n  title,\n  code,\n  "defaultLanguage": languages[@->isDefault == true][0]-> {\n    _id,\n    title,\n    code,\n    isDefault\n  }\n}': MARKET_DEFAULT_LANGUAGE_QUERYResult;
    "\n  buttons[] {\n    text,\n    linkType,\n    openInNewTab,\n    variant,\n    internalLink-> {\n      _id,\n      _type,\n      _ref,\n      slug {\n        _type,\n        current\n      }\n    },\n    externalLink\n  }\n": ButtonFragmentResult;
    '\n  pageBuilder[] {\n    \n  _type == "hero" => {\n    _type,\n    _key,\n    slides[] {\n      title,\n      subTitle,\n      \n  buttons[] {\n    text,\n    linkType,\n    openInNewTab,\n    variant,\n    internalLink-> {\n      _id,\n      _type,\n      _ref,\n      slug {\n        _type,\n        current\n      }\n    },\n    externalLink\n  }\n,\n      mediaType,\n      image {\n        ...,\n        ...asset-> {\n          altText,\n          caption,\n          ...metadata {\n            lqip,\n            ...dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      video {\n        asset,\n        alt,\n        poster {\n          asset\n        }\n      }\n    }\n  }\n,\n    \n  _type == "filmStrip" => {\n    _type,\n    _key,\n    cards[]{\n      _key,\n      label,\n      \n  buttons[] {\n    text,\n    linkType,\n    openInNewTab,\n    variant,\n    internalLink-> {\n      _id,\n      _type,\n      _ref,\n      slug {\n        _type,\n        current\n      }\n    },\n    externalLink\n  }\n,\n      mediaType,\n      image {\n        ...,\n        ...asset-> {\n          altText,\n          caption,\n          ...metadata {\n            lqip,\n            ...dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      video{\n        asset->{\n          _id,\n          url\n        },\n        alt,\n        poster{\n          asset->{\n            _id,\n            url\n          },\n          alt\n        }\n      },\n      ctaButtons[]{\n        _key,\n        label,\n        linkType,\n        internalLink->{_ref, slug},\n        externalLink\n      }\n    }\n  }\n,\n    \n  _type == "accordion" => {\n    _type,\n    _key,\n    panels[]{\n      _key,\n      label,\n      content\n    }\n  }\n\n  }\n': PageBuilderFragmentResult;
    '\n  *[_id == $docId][0] {\n    _id,\n    _type,\n    title,\n    description,\n    language,\n    \n  pageBuilder[] {\n    \n  _type == "hero" => {\n    _type,\n    _key,\n    slides[] {\n      title,\n      subTitle,\n      \n  buttons[] {\n    text,\n    linkType,\n    openInNewTab,\n    variant,\n    internalLink-> {\n      _id,\n      _type,\n      _ref,\n      slug {\n        _type,\n        current\n      }\n    },\n    externalLink\n  }\n,\n      mediaType,\n      image {\n        ...,\n        ...asset-> {\n          altText,\n          caption,\n          ...metadata {\n            lqip,\n            ...dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      video {\n        asset,\n        alt,\n        poster {\n          asset\n        }\n      }\n    }\n  }\n,\n    \n  _type == "filmStrip" => {\n    _type,\n    _key,\n    cards[]{\n      _key,\n      label,\n      \n  buttons[] {\n    text,\n    linkType,\n    openInNewTab,\n    variant,\n    internalLink-> {\n      _id,\n      _type,\n      _ref,\n      slug {\n        _type,\n        current\n      }\n    },\n    externalLink\n  }\n,\n      mediaType,\n      image {\n        ...,\n        ...asset-> {\n          altText,\n          caption,\n          ...metadata {\n            lqip,\n            ...dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      video{\n        asset->{\n          _id,\n          url\n        },\n        alt,\n        poster{\n          asset->{\n            _id,\n            url\n          },\n          alt\n        }\n      },\n      ctaButtons[]{\n        _key,\n        label,\n        linkType,\n        internalLink->{_ref, slug},\n        externalLink\n      }\n    }\n  }\n,\n    \n  _type == "accordion" => {\n    _type,\n    _key,\n    panels[]{\n      _key,\n      label,\n      content\n    }\n  }\n\n  }\n,\n    seoTitle,\n    seoDescription,\n    seoImage {\n      asset->,\n      alt\n    },\n    ogTitle,\n    ogDescription\n  }\n': HomeQueryResult;
  }
}
